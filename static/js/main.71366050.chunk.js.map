{"version":3,"sources":["components/Item.jsx","components/ItemList.jsx","services/getFirestore.js","components/ItemListContainer.jsx","context/CartContext.jsx","components/CartWidget.jsx","components/NavBar.jsx","components/ItemCount.jsx","components/ItemDetail.jsx","components/ItemDetailContainer.jsx","components/Cart.jsx","App.js","index.js"],"names":["Item","prod","className","name","price","stock","src","pictureURL","alt","to","id","ItemList","product","map","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","firestore","ItemListContainer","useState","setProduct","idCategory","useParams","spinnerLoading","setSpinnerLoading","useEffect","dbQuery","collection","get","setTimeout","then","resp","docs","data","filter","category","catch","err","alert","finally","type","color","height","width","visible","CartContext","createContext","useCartContext","useContext","CartContextProvider","children","cartList","setCartList","totalQuantity","i","quantity","Provider","value","addToCart","items","itemIndex","findIndex","item","props","newQuantity","splice","deleteFromCart","clearItems","CartWidget","NavBar","href","ItemCount","onAdd","initial","count","setCount","onClick","ItemDetail","setQuantity","purchaseQ","setPurchaseQ","detail","ItemDetailContainer","prodDetail","setProdDetail","doc","Cart","phone","email","formData","setFormData","orderCreated","setOrderCreated","orderId","setOrderId","finalPrice","reduce","acum","parseInt","title","onSubmit","e","preventDefault","order","date","Timestamp","fromDate","Date","buyer","total","cartItem","add","itemsToUpdate","where","FieldPath","documentId","batch","forEach","docSnapshot","update","ref","find","commit","onChange","target","placeholder","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71366050.chunk.js","sourcesContent":["import \"../styles/Item.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Item({prod}) {\r\n  return (\r\n    <div className=\"item\">\r\n      <p className=\"prodName\">{prod.name}</p>\r\n      <p>Precio por unidad:${prod.price}</p>\r\n      <p>Stock disponible: {prod.stock}</p>\r\n      <img src={prod.pictureURL} alt={`Imagen del producto: ${prod.name}`} />\r\n      <Link to={`/detail/${prod.id}`}><button className=\"details\">Informaci√≥n adicional</button></Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import Item from \"./Item\";\r\n\r\nfunction ItemList({product}) {\r\n  return (\r\n    product.map(prod => <Item key={prod.id} prod={prod}/>)\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDkghQTxKhzQzjSQh57ATsI-1BHrtfCWIE\",\r\n  authDomain: \"natural-cosmetics-56970.firebaseapp.com\",\r\n  projectId: \"natural-cosmetics-56970\",\r\n  storageBucket: \"natural-cosmetics-56970.appspot.com\",\r\n  messagingSenderId: \"414395105923\",\r\n  appId: \"1:414395105923:web:12faaabc07fad957ed91b6\",\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport function getFirestore() {\r\n  return firebase.firestore(app);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ItemList from \"./ItemList\";\r\nimport \"../styles/ItemListContainer.css\";\r\nimport { getFirestore } from \"../services/getFirestore\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"../styles/Loader.css\";\r\n\r\nfunction ItemListContainer() {\r\n  const [product, setProduct] = useState([]);\r\n  const { idCategory } = useParams();\r\n  const [spinnerLoading, setSpinnerLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const dbConnection = getFirestore();\r\n    const dbQuery = dbConnection.collection(\"items\").get();\r\n    setSpinnerLoading(true);\r\n    setTimeout(() => {\r\n      if (idCategory) {\r\n        dbQuery\r\n          .then((resp) => {\r\n            setProduct(\r\n              resp.docs\r\n                .map((prod) => ({ id: prod.id, ...prod.data() }))\r\n                .filter((prod) => prod.category === idCategory)\r\n            );\r\n          })\r\n          .catch((err) => alert(\"Error:\", err))\r\n          .finally(() => {\r\n            setSpinnerLoading(false);\r\n          });\r\n      } else {\r\n        dbQuery\r\n          .then((resp) => {\r\n            setProduct(\r\n              resp.docs.map((prod) => ({ id: prod.id, ...prod.data() }))\r\n            );\r\n          })\r\n          .catch((err) => alert(\"Error:\", err))\r\n          .finally(() => {\r\n            setSpinnerLoading(false);\r\n          });\r\n      }\r\n    }, 2000);\r\n  }, [idCategory]);\r\n\r\n  const title = () => {\r\n    if (idCategory) {\r\n      return `${idCategory}`;\r\n    } else {\r\n      return \"Productos\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>{title()}</h1>\r\n      {spinnerLoading ? (\r\n        <Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          className=\"loader\"\r\n          height={100}\r\n          width={100}\r\n          visible={spinnerLoading}\r\n        />\r\n      ) : (\r\n        <div className=\"itemContainer\">\r\n          <ItemList product={product} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemListContainer;\r\n","import { createContext, useState, useContext } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n  const [cartList, setCartList] = useState([]);\r\n  function addToCart(items) {\r\n    const itemIndex = cartList.findIndex(\r\n      (item) => item.props.id === items.props.id\r\n    );\r\n    if (itemIndex > -1) {\r\n      const oldQuantity = cartList[itemIndex].quantity;\r\n      const newQuantity = oldQuantity + items.quantity;\r\n      if (newQuantity < items.props.stock) {\r\n      items.quantity = newQuantity; \r\n      cartList.splice(itemIndex, 1);\r\n      setCartList([...cartList, items])\r\n      }\r\n      else {\r\n        alert (`La cantidad seleccionada supera el stock disponible del producto`)\r\n      }\r\n    } else {\r\n      setCartList([...cartList, items]);\r\n    }\r\n  }\r\n  function deleteFromCart(id) {\r\n    const itemIndex = cartList.findIndex((item) => item.props.id === id);\r\n    cartList.splice(itemIndex, 1);\r\n    setCartList([...cartList]);\r\n  }\r\n  function clearItems() {\r\n    cartList.splice(0);\r\n    setCartList([...cartList]);\r\n  }\r\n  // cartWidget counter\r\n  let totalQuantity = 0; \r\n  for (const i in cartList) {\r\n    totalQuantity += cartList[i].quantity\r\n  }\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cartList, addToCart, deleteFromCart, clearItems, totalQuantity }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContextProvider;\r\n","import React from \"react\";\r\nimport \"../styles/CartWidget.css\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\n\r\nfunction CartWidget() {\r\n  const { totalQuantity } = useCartContext();\r\n  return (\r\n    <button className=\"cartWidget\">\r\n      <i className=\"fas fa-shopping-cart\"></i>\r\n      <span className=\"totalQuantity\">{`${totalQuantity}`}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CartWidget;\r\n","import React from \"react\";\r\nimport \"../styles/NavBar.css\";\r\nimport CartWidget from \"./CartWidget\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to={\"/\"}>Natural cosmetics</Link>\r\n      <Link to={\"/\"}>Productos</Link>\r\n      <Link to={\"/category/Shampoo\"}>Shampoo</Link>\r\n      <Link to={\"/category/Cuidado personal\"}>Cuidado personal</Link>\r\n      <Link to={\"/category/Limpieza\"}>Limpieza</Link>\r\n      <Link to={\"/cart\"}><CartWidget/></Link>\r\n      <a className=\"signIn\" href=\"/signIn\">\r\n        Iniciar sesi√≥n\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/ItemCount.css\";\r\n\r\nfunction ItemCount({ stock, onAdd, initial }) {\r\n  const [count, setCount] = useState(initial);\r\n\r\n  const addProduct = () => {\r\n    if (count < stock) {\r\n      setCount(count + 1);\r\n    }\r\n  };\r\n  const removeProduct = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"itemCount\">\r\n        <button onClick={removeProduct} className={count === 1 ? \"counterButton counterButtonRed\" : \"counterButton\"}>\r\n          <i className=\"fas fa-minus\"></i>\r\n        </button>\r\n        <span className=\"counter\">{count}</span>\r\n        <button\r\n          onClick={addProduct}\r\n          className={count === stock ? \"counterButton counterButtonRed\" : \"counterButton\"}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n      <button className=\"onAdd\" onClick={() => onAdd(count)}>\r\n        Agregar al carrito\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemCount;\r\n","import { useState } from \"react\";\r\nimport ItemCount from \"./ItemCount\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/ItemDetail.css\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\n\r\nfunction ItemDetail({ props }) {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [purchaseQ, setPurchaseQ] = useState(false);\r\n  const { addToCart } = useCartContext();\r\n\r\n  const onAdd = (count) => {\r\n    setQuantity(count);\r\n    setPurchaseQ(true);\r\n    addToCart({ props, quantity: count });\r\n  };\r\n\r\n  return (\r\n    <div className=\"itemDetail\">\r\n      <img\r\n        className=\"itemDetail_img\"\r\n        src={props.pictureURL}\r\n        alt={`Imagen del producto: ${props.name}`}\r\n      />\r\n      <p className=\"itemDetail_name\">{props.name}</p>\r\n      <p className=\"itemDetail_category\">{props.category}</p>\r\n      <p className=\"itemDetail_price\">${props.price}</p>\r\n      <p className=\"itemDetail_detail\">{props.detail}</p>\r\n      <div className=\"itemDetail_count\">\r\n        {purchaseQ ? (\r\n          <Link to={\"/cart\"}>\r\n            <button className=\"btnToCart\">Continuar la compra</button>\r\n          </Link>\r\n        ) : (\r\n          <ItemCount stock={props.stock} onAdd={onAdd} initial={quantity} />\r\n        )}\r\n        <Link to={`/category/${props.category}`}>\r\n          <button className=\"btnBack\">Volver</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ItemDetail from \"../components/ItemDetail\";\r\nimport { getFirestore } from \"../services/getFirestore\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"../styles/Loader.css\";\r\n\r\nfunction ItemDetailContainer() {\r\n  const [prodDetail, setProdDetail] = useState([]);\r\n  const { id } = useParams();\r\n  const [spinnerLoading, setSpinnerLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const dbConnection = getFirestore();\r\n    const dbQuery = dbConnection.collection(\"items\").doc(id).get();\r\n    setTimeout(() => {\r\n      if (id) {\r\n        dbQuery\r\n          .then((resp) => {\r\n            setProdDetail({ id: resp.id, ...resp.data() });\r\n          })\r\n          .catch((err) => alert(\"Error:\", err))\r\n          .finally(() => {\r\n            setSpinnerLoading(false);\r\n          });\r\n      }\r\n    }, 1500);\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      {spinnerLoading ? (\r\n        <Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          className=\"loader\"\r\n          height={100}\r\n          width={100}\r\n          visible={spinnerLoading}\r\n        />\r\n      ) : (\r\n        <ItemDetail props={prodDetail} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemDetailContainer;\r\n","import { useCartContext } from \"../context/CartContext\";\r\nimport \"../styles/Cart.css\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { getFirestore } from \"../services/getFirestore\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Cart() {\r\n  const { cartList, deleteFromCart, clearItems } = useCartContext();\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n  const [orderCreated, setOrderCreated] = useState(false);\r\n  const [orderId, setOrderId] = useState();\r\n\r\n  const finalPrice = () => {\r\n    return cartList.reduce(\r\n      (acum, prod) => acum + prod.quantity * parseInt(prod.props.price),\r\n      0\r\n    );\r\n  };\r\n\r\n  const createOrder = (e) => {\r\n    e.preventDefault();\r\n\r\n    setOrderCreated(true);\r\n\r\n    let order = {};\r\n    order.date = firebase.firestore.Timestamp.fromDate(new Date());\r\n    order.buyer = formData;\r\n    order.total = finalPrice();\r\n    order.items = cartList.map((cartItem) => {\r\n      const id = cartItem.props.id;\r\n      const name = cartItem.props.name;\r\n      const price = cartItem.quantity * parseInt(cartItem.props.price);\r\n      const quantity = cartItem.quantity;\r\n      return { id, name, price, quantity };\r\n    });\r\n\r\n    const dbQuery = getFirestore();\r\n    dbQuery\r\n      .collection(\"orders\")\r\n      .add(order)\r\n      .then(({ id }) => setOrderId(id))\r\n      .catch((err) => alert(\"Error:\", err))\r\n      .finally(() =>\r\n        setFormData({\r\n          name: \"\",\r\n          phone: \"\",\r\n          email: \"\",\r\n        })\r\n      );\r\n\r\n    const itemsToUpdate = dbQuery.collection(\"items\").where(\r\n      firebase.firestore.FieldPath.documentId(),\r\n      \"in\",\r\n      cartList.map((i) => i.props.id)\r\n    );\r\n\r\n    const batch = dbQuery.batch();\r\n\r\n    itemsToUpdate.get().then((collection) => {\r\n      collection.docs.forEach((docSnapshot) => {\r\n        batch.update(docSnapshot.ref, {\r\n          stock:\r\n            docSnapshot.data().stock -\r\n            cartList.find((item) => item.props.id === docSnapshot.id).quantity,\r\n        });\r\n      });\r\n      batch.commit()\r\n      clearItems();\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const changeOrderStatus = () => {\r\n    setOrderCreated(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cartContainer\">\r\n        <h2>Detalle de tu compra</h2>\r\n        <ul className=\"responsive-table\">\r\n          <li className=\"table-header\">\r\n            <div className=\"col col-1\">Producto</div>\r\n            <div className=\"col col-2\">Cantidad</div>\r\n            <div className=\"col col-3\">Precio unitario</div>\r\n            <div className=\"col col-4\"></div>\r\n          </li>\r\n\r\n          {cartList.map((item) => (\r\n            <li key={item.props.id} className=\"table-row\">\r\n              <div className=\"col col-1\" data-label=\"name\">\r\n                {item.props.name}\r\n              </div>\r\n              <div className=\"col col-2\" data-label=\"quantity\">\r\n                {item.quantity}\r\n              </div>\r\n              <div className=\"col col-3\" data-label=\"price\">\r\n                ${item.props.price}\r\n              </div>\r\n              <div className=\"btnDelete col col-4\">\r\n                <button\r\n                  className=\"btnDelete\"\r\n                  title=\"Eliminar item\"\r\n                  onClick={() => deleteFromCart(item.props.id)}\r\n                >\r\n                  <i className=\"fas fa-minus-circle\"></i>\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n\r\n          <li className=\"table-row\">\r\n            <button\r\n              className=\"btnClear\"\r\n              title=\"Vaciar carrito\"\r\n              onClick={() => clearItems()}\r\n            >\r\n              <i className=\"far fa-trash-alt\"></i>\r\n            </button>{\" \"}\r\n            {orderCreated ? (\r\n              <>\r\n                <p>Tu orden de compra es: {orderId}</p>\r\n                <Link to={\"/\"}>\r\n                  <button onClick={changeOrderStatus}>Ver m√°s productos</button>\r\n                </Link>\r\n                <p></p>\r\n              </>\r\n            ) : (\r\n              <form onSubmit={createOrder} onChange={handleChange}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Nombre\"\r\n                  value={formData.name}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  placeholder=\"N¬∞ Celular\"\r\n                  value={formData.phone}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={formData.email}\r\n                />\r\n                <div>Total: ${finalPrice()}</div>\r\n                <button>Comprar</button>\r\n              </form>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import ItemListContainer from \"./components/ItemListContainer\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ItemDetailContainer from \"./components/ItemDetailContainer\";\nimport CartContextProvider from \"./context/CartContext\";\nimport Cart from \"./components/Cart\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CartContextProvider>\n        <BrowserRouter>\n          <header className=\"App-header\">\n            <NavBar />\n          </header>\n          <Switch>\n            <Route exact path=\"/\">\n              <ItemListContainer />\n            </Route>\n            <Route\n              exact\n              path=\"/category/:idCategory\"\n              component={ItemListContainer}\n            />\n            <Route exact path=\"/detail/:id\" component={ItemDetailContainer} />\n            <Route exact path=\"/cart\" component={Cart} />\n          </Switch>\n        </BrowserRouter>\n      </CartContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}